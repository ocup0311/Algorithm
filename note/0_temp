# 筆記方向 ===================================================================================
1. 查演算法的各種使用時機
2. 附圖解
3. pseudo code
4. 簡單文字描述
5. Big O
6. 找機會轉成 Markdown
7. （Ｑ？） still need to find the anwer


# 重看過往 ====================================================================================
＊ 整理多層 object --> 淮: 用 BFS
＊ old case study: idsToChildren
＊ 找時間把 O, Ω, Θ 算法再認真看一遍



# Graph ======================================================================================

    Abstract
    有限的 vertices
    方向性有無
    vertices (nodes, points)
    edges (links, lines)


    Breadth First Tree Traversal (BFT) (廣度優先)

    Depth First Tree Traversal   (DFT) (深度優先)
        


    # ex. ------------------------------------------------------------------
    Graph: [(A,E) (A,F) (B,D) (C,D) (D,E) (D,I) (E,F) (E,I) (F,I) 
    (G,H) (G,I) (H,I) (H,L) (I,J) (I,K) (I,M) (J, M) (K,L) (K,M)]
    此例中, 從 A 開始, 以字母順序當標準。
    
    BFT: A -> E -> F -> D -> I -> B -> C -> G -> H -> J -> K -> M -> L
    DFT: A -> E -> D -> B -> C -> I -> F -> G -> H -> L -> K -> M -> J
    # ex. ------------------------------------------------------------------


; Floyd-Warchall 
; Dijkstra's 